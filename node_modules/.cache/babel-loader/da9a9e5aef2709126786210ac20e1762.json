{"ast":null,"code":"export let buscar = arrayUPDATE_SEARCHUPDATE_SEARCHname => {\n  if (array.length) return array.filter(e => e.name === name);\n  return [];\n};\nexport let tipos = (type, array) => {\n  if (array.length) return array.filter(p => p.tipos.includes(type));\n  return [];\n};\nexport const ordered = (order, array) => {\n  let names = array.map(o => o.name);\n  let fuerza = array.map(o => o.fuerza);\n  let api = array.filter(e => e.createdDBB !== true);\n  let bdd = array.filter(e => e.createdDBB === true);\n  let orde = [];\n  switch (order) {\n    case \"a-z\":\n      names = names.sort();\n      names.forEach(p => {\n        array.forEach(po => {\n          if (p === po.name) orde.push(po);\n        });\n      });\n      return orde;\n    case \"z-a\":\n      names = names.sort().reverse();\n      names.forEach(p => {\n        array.forEach(po => {\n          if (p === po.name) orde.push(po);\n        });\n      });\n      return orde;\n    case \"ataque+\":\n      fuerza = fuerza.sort((a, b) => b - a);\n      fuerza.forEach(f => {\n        array.forEach(p => {\n          if (p.fuerza === f) orde.push(p);\n        });\n      });\n      orde = orde.filter((e, i) => orde.indexOf(e) === i);\n      return orde;\n    case \"ataque-\":\n      fuerza = fuerza.sort((a, b) => a - b);\n      fuerza.forEach(f => {\n        array.forEach(p => {\n          if (p.fuerza === f) orde.push(p);\n        });\n      });\n      orde = orde.filter((e, i) => orde.indexOf(e) === i);\n      return orde;\n    case \"createdBDD\":\n      return bdd;\n    case \"api\":\n      return api;\n    default:\n      return array;\n  }\n};","map":{"version":3,"names":["buscar","arrayUPDATE_SEARCHUPDATE_SEARCHname","array","length","filter","e","name","tipos","type","p","includes","ordered","order","names","map","o","fuerza","api","createdDBB","bdd","orde","sort","forEach","po","push","reverse","a","b","f","i","indexOf"],"sources":["/home/cristian/Escritorio/PI-Pokemon-main/client/src/assets/utils/utils.js"],"sourcesContent":["export let buscar = (arrayUPDATE_SEARCHUPDATE_SEARCHname) => {\n  if (array.length) return array.filter((e) => e.name === name);\n  return [];\n};\n\nexport let tipos = (type, array) => {\n  if (array.length) return array.filter((p) => p.tipos.includes(type));\n  return [];\n};\n\nexport const ordered = (order, array) => {\n  let names = array.map((o) => o.name);\n  let fuerza = array.map((o) => o.fuerza);\n  let api = array.filter((e) => e.createdDBB !== true);\n  let bdd = array.filter((e) => e.createdDBB === true);\n  let orde = [];\n\n  switch (order) {\n    case \"a-z\":\n      names = names.sort();\n      names.forEach((p) => {\n        array.forEach((po) => {\n          if (p === po.name) orde.push(po);\n        });\n      });\n      return orde;\n    case \"z-a\":\n      names = names.sort().reverse();\n      names.forEach((p) => {\n        array.forEach((po) => {\n          if (p === po.name) orde.push(po);\n        });\n      });\n      return orde;\n    case \"ataque+\":\n      fuerza = fuerza.sort((a, b) => b - a);\n      fuerza.forEach((f) => {\n        array.forEach((p) => {\n          if (p.fuerza === f) orde.push(p);\n        });\n      });\n      orde = orde.filter((e, i) => orde.indexOf(e) === i);\n      return orde;\n    case \"ataque-\":\n      fuerza = fuerza.sort((a, b) => a - b);\n      fuerza.forEach((f) => {\n        array.forEach((p) => {\n          if (p.fuerza === f) orde.push(p);\n        });\n      });\n      orde = orde.filter((e, i) => orde.indexOf(e) === i);\n      return orde;\n    case \"createdBDD\":\n      return bdd;\n    case \"api\":\n      return api;\n    default:\n      return array;\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { GET_POKEMON, GET_POKEMONS, SEARCH_POKEMON, GET_TYPES, SORT_ORDER, FILTER_TYPES, UPDATE_POKEMON, UPDATE_TYPE, UPDATE_ORDER, UPDATE_POKEMONS, UPDATE_SEARCH } from \"./actions\";\nconst initialState = {\n  types: [],\n  pokemons: [],\n  pokemon: {},\n  typeLoading: true,\n  pokemonLoading: true,\n  type: \"\",\n  order: \"\"\n};\nexport const rootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case GET_TYPES:\n      return {\n        ...state,\n        types: action.payload,\n        type: false\n      };\n    case GET_POKEMONS:\n      return {\n        ...state,\n        pokemons: action.payload,\n        isLoading: false\n      };\n    case UPDATE_POKEMONS:\n      return {\n        ...state,\n        pokemons: action.payload\n      };\n    case GET_POKEMON:\n      return {\n        ...state,\n        pokemon: action.payload,\n        isLoading: false\n      };\n    case UPDATE_POKEMON:\n      return {\n        ...state,\n        pokemon: action.payload\n      };\n    case SEARCH_POKEMON:\n      return {\n        ...state,\n        pokemons: action.payload,\n        isLoading: false\n      };\n    case UPDATE_SEARCH:\n      return {\n        ...state,\n        search: action.payload\n      };\n    case FILTER_TYPES:\n      return {\n        ...state,\n        type: action.payload\n      };\n    case UPDATE_TYPE:\n      return {\n        ...state,\n        type: action.payload\n      };\n    case SORT_ORDER:\n      return {\n        ...state,\n        order: action.payload\n      };\n    case UPDATE_ORDER:\n      return {\n        ...state,\n        order: action.payload\n      };\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["GET_POKEMON","GET_POKEMONS","SEARCH_POKEMON","GET_TYPES","SORT_ORDER","FILTER_TYPES","UPDATE_POKEMON","UPDATE_TYPE","UPDATE_ORDER","UPDATE_POKEMONS","UPDATE_SEARCH","initialState","types","pokemons","pokemon","typeLoading","pokemonLoading","type","order","rootReducer","state","arguments","length","undefined","action","payload","isLoading","search"],"sources":["/home/cristian/Escritorio/PI-Pokemon-main/client/src/redux/reducer.js"],"sourcesContent":["import {\n  GET_POKEMON,\n  GET_POKEMONS,\n  SEARCH_POKEMON,\n  GET_TYPES,\n  SORT_ORDER,\n  FILTER_TYPES,\n  UPDATE_POKEMON,\n  UPDATE_TYPE,\n  UPDATE_ORDER,\n  UPDATE_POKEMONS,\n  UPDATE_SEARCH,\n} from \"./actions\";\n\nconst initialState = {\n  types: [],\n  pokemons: [],\n  pokemon: {},\n  typeLoading: true,\n  pokemonLoading: true,\n  type: \"\",\n  order: \"\",\n};\n\nexport const rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_TYPES:\n      return {\n        ...state,\n        types: action.payload,\n        type: false,\n      };\n    case GET_POKEMONS:\n      return {\n        ...state,\n        pokemons: action.payload,\n        isLoading: false,\n      };\n    case UPDATE_POKEMONS:\n      return {\n        ...state,\n        pokemons: action.payload,\n      };\n    case GET_POKEMON:\n      return {\n        ...state,\n        pokemon: action.payload,\n        isLoading: false,\n      };\n    case UPDATE_POKEMON:\n      return {\n        ...state,\n        pokemon: action.payload,\n      };\n    case SEARCH_POKEMON:\n      return {\n        ...state,\n        pokemons: action.payload,\n        isLoading: false,\n      };\n    case UPDATE_SEARCH:\n      return {\n        ...state,\n        search: action.payload,\n      };\n    case FILTER_TYPES:\n      return {\n        ...state,\n        type: action.payload,\n      };\n    case UPDATE_TYPE:\n      return {\n        ...state,\n        type: action.payload,\n      };\n    case SORT_ORDER:\n      return {\n        ...state,\n        order: action.payload,\n      };\n    case UPDATE_ORDER:\n      return {\n        ...state,\n        order: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n"],"mappings":"AAAA,SACEA,WAAW,EACXC,YAAY,EACZC,cAAc,EACdC,SAAS,EACTC,UAAU,EACVC,YAAY,EACZC,cAAc,EACdC,WAAW,EACXC,YAAY,EACZC,eAAe,EACfC,aAAa,QACR,WAAW;AAElB,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,EAAE;EACTC,QAAQ,EAAE,EAAE;EACZC,OAAO,EAAE,CAAC,CAAC;EACXC,WAAW,EAAE,IAAI;EACjBC,cAAc,EAAE,IAAI;EACpBC,IAAI,EAAE,EAAE;EACRC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,WAAW,GAAG,SAAAA,CAAA,EAAkC;EAAA,IAAjCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGV,YAAY;EAAA,IAAEa,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACtD,QAAQC,MAAM,CAACP,IAAI;IACjB,KAAKd,SAAS;MACZ,OAAO;QACL,GAAGiB,KAAK;QACRR,KAAK,EAAEY,MAAM,CAACC,OAAO;QACrBR,IAAI,EAAE;MACR,CAAC;IACH,KAAKhB,YAAY;MACf,OAAO;QACL,GAAGmB,KAAK;QACRP,QAAQ,EAAEW,MAAM,CAACC,OAAO;QACxBC,SAAS,EAAE;MACb,CAAC;IACH,KAAKjB,eAAe;MAClB,OAAO;QACL,GAAGW,KAAK;QACRP,QAAQ,EAAEW,MAAM,CAACC;MACnB,CAAC;IACH,KAAKzB,WAAW;MACd,OAAO;QACL,GAAGoB,KAAK;QACRN,OAAO,EAAEU,MAAM,CAACC,OAAO;QACvBC,SAAS,EAAE;MACb,CAAC;IACH,KAAKpB,cAAc;MACjB,OAAO;QACL,GAAGc,KAAK;QACRN,OAAO,EAAEU,MAAM,CAACC;MAClB,CAAC;IACH,KAAKvB,cAAc;MACjB,OAAO;QACL,GAAGkB,KAAK;QACRP,QAAQ,EAAEW,MAAM,CAACC,OAAO;QACxBC,SAAS,EAAE;MACb,CAAC;IACH,KAAKhB,aAAa;MAChB,OAAO;QACL,GAAGU,KAAK;QACRO,MAAM,EAAEH,MAAM,CAACC;MACjB,CAAC;IACH,KAAKpB,YAAY;MACf,OAAO;QACL,GAAGe,KAAK;QACRH,IAAI,EAAEO,MAAM,CAACC;MACf,CAAC;IACH,KAAKlB,WAAW;MACd,OAAO;QACL,GAAGa,KAAK;QACRH,IAAI,EAAEO,MAAM,CAACC;MACf,CAAC;IACH,KAAKrB,UAAU;MACb,OAAO;QACL,GAAGgB,KAAK;QACRF,KAAK,EAAEM,MAAM,CAACC;MAChB,CAAC;IACH,KAAKjB,YAAY;MACf,OAAO;QACL,GAAGY,KAAK;QACRF,KAAK,EAAEM,MAAM,CAACC;MAChB,CAAC;IACH;MACE,OAAOL,KAAK;EAChB;AACF,CAAC"},"metadata":{},"sourceType":"module"}
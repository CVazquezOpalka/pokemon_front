{"ast":null,"code":"export let tipos = (type, array) => {\n  const aux = (array, name) => array.map(e => e.name);\n  if (array.length) return array.filter(p => p.tipos.name ? aux(p.tipos, name).includes(type) : p.tipos.includes(type));\n  return [];\n};\nexport const ordered = (order, array) => {\n  let names = array.map(o => o.name);\n  let fuerza = array.map(o => o.fuerza);\n  let api = array.filter(e => e.createdBDD !== true);\n  let bdd = array.filter(e => e.createdBDD === true);\n  let orde = [];\n  switch (order) {\n    case \"a-z\":\n      names = names.sort();\n      names.forEach(p => {\n        array.forEach(po => {\n          if (p === po.name) orde.push(po);\n        });\n      });\n      return orde;\n    case \"z-a\":\n      names = names.sort().reverse();\n      names.forEach(p => {\n        array.forEach(po => {\n          if (p === po.name) orde.push(po);\n        });\n      });\n      return orde;\n    case \"ataque+\":\n      fuerza = fuerza.sort((a, b) => b - a);\n      fuerza.forEach(f => {\n        array.forEach(p => {\n          if (p.fuerza === f) orde.push(p);\n        });\n      });\n      orde = orde.filter((e, i) => orde.indexOf(e) === i);\n      return orde;\n    case \"ataque-\":\n      fuerza = fuerza.sort((a, b) => a - b);\n      fuerza.forEach(f => {\n        array.forEach(p => {\n          if (p.fuerza === f) orde.push(p);\n        });\n      });\n      orde = orde.filter((e, i) => orde.indexOf(e) === i);\n      return orde;\n    case \"createdBDD\":\n      return bdd;\n    case \"api\":\n      return api;\n    default:\n      return array;\n  }\n};","map":{"version":3,"names":["tipos","type","array","aux","name","map","e","length","filter","p","includes","ordered","order","names","o","fuerza","api","createdBDD","bdd","orde","sort","forEach","po","push","reverse","a","b","f","i","indexOf"],"sources":["/home/cristian/Escritorio/PI-Pokemon-main/client/src/assets/utils/utils.js"],"sourcesContent":["export let tipos = (type, array) => {\n  const aux = (array, name)=> array.map(e=> e.name)\n  if (array.length)\n    return array.filter((p) =>\n      p.tipos.name\n        ? aux(p.tipos, name).includes(type)\n        : p.tipos.includes(type)\n    );\n  return [];\n};\n\nexport const ordered = (order, array) => {\n  let names = array.map((o) => o.name);\n  let fuerza = array.map((o) => o.fuerza);\n  let api = array.filter((e) => e.createdBDD !== true);\n  let bdd = array.filter((e) => e.createdBDD === true);\n  let orde = [];\n\n  switch (order) {\n    case \"a-z\":\n      names = names.sort();\n      names.forEach((p) => {\n        array.forEach((po) => {\n          if (p === po.name) orde.push(po);\n        });\n      });\n      return orde;\n    case \"z-a\":\n      names = names.sort().reverse();\n      names.forEach((p) => {\n        array.forEach((po) => {\n          if (p === po.name) orde.push(po);\n        });\n      });\n      return orde;\n    case \"ataque+\":\n      fuerza = fuerza.sort((a, b) => b - a);\n      fuerza.forEach((f) => {\n        array.forEach((p) => {\n          if (p.fuerza === f) orde.push(p);\n        });\n      });\n      orde = orde.filter((e, i) => orde.indexOf(e) === i);\n      return orde;\n    case \"ataque-\":\n      fuerza = fuerza.sort((a, b) => a - b);\n      fuerza.forEach((f) => {\n        array.forEach((p) => {\n          if (p.fuerza === f) orde.push(p);\n        });\n      });\n      orde = orde.filter((e, i) => orde.indexOf(e) === i);\n      return orde;\n    case \"createdBDD\":\n      return bdd;\n    case \"api\":\n      return api;\n    default:\n      return array;\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
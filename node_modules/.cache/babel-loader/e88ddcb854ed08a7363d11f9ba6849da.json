{"ast":null,"code":"export let tipos = (type, array) => {\n  if (array.length) return array.filter(p => p.tipos.includes(type));\n  return [];\n};\nexport const ordered = (order, array) => {\n  let names = array.map(o => o.name);\n  let fuerza = array.map(o => o.fuerza);\n  let api = array.filter(e => e.createdBDD !== true);\n  let bdd = array.filter(e => e.createdBDD === true);\n  let orde = [];\n  console.log(bdd);\n  switch (order) {\n    case \"a-z\":\n      names = names.sort();\n      names.forEach(p => {\n        array.forEach(po => {\n          if (p === po.name) orde.push(po);\n        });\n      });\n      return orde;\n    case \"z-a\":\n      names = names.sort().reverse();\n      names.forEach(p => {\n        array.forEach(po => {\n          if (p === po.name) orde.push(po);\n        });\n      });\n      return orde;\n    case \"ataque+\":\n      fuerza = fuerza.sort((a, b) => b - a);\n      fuerza.forEach(f => {\n        array.forEach(p => {\n          if (p.fuerza === f) orde.push(p);\n        });\n      });\n      orde = orde.filter((e, i) => orde.indexOf(e) === i);\n      return orde;\n    case \"ataque-\":\n      fuerza = fuerza.sort((a, b) => a - b);\n      fuerza.forEach(f => {\n        array.forEach(p => {\n          if (p.fuerza === f) orde.push(p);\n        });\n      });\n      orde = orde.filter((e, i) => orde.indexOf(e) === i);\n      return orde;\n    case \"createdBDD\":\n      return bdd;\n    case \"api\":\n      return api;\n    default:\n      return array;\n  }\n};","map":{"version":3,"names":["tipos","type","array","length","filter","p","includes","ordered","order","names","map","o","name","fuerza","api","e","createdBDD","bdd","orde","console","log","sort","forEach","po","push","reverse","a","b","f","i","indexOf"],"sources":["/home/cristian/Escritorio/PI-Pokemon-main/client/src/assets/utils/utils.js"],"sourcesContent":["export let tipos = (type, array) => {\n  if (array.length) return array.filter((p) => p.tipos.includes(type));\n  return [];\n};\n\nexport const ordered = (order, array) => {\n  let names = array.map((o) => o.name);\n  let fuerza = array.map((o) => o.fuerza);\n  let api = array.filter((e) => e.createdBDD !== true);\n  let bdd = array.filter((e) => e.createdBDD === true);\n  let orde = [];\nconsole.log(bdd)\n  switch (order) {\n    case \"a-z\":\n      names = names.sort();\n      names.forEach((p) => {\n        array.forEach((po) => {\n          if (p === po.name) orde.push(po);\n        });\n      });\n      return orde;\n    case \"z-a\":\n      names = names.sort().reverse();\n      names.forEach((p) => {\n        array.forEach((po) => {\n          if (p === po.name) orde.push(po);\n        });\n      });\n      return orde;\n    case \"ataque+\":\n      fuerza = fuerza.sort((a, b) => b - a);\n      fuerza.forEach((f) => {\n        array.forEach((p) => {\n          if (p.fuerza === f) orde.push(p);\n        });\n      });\n      orde = orde.filter((e, i) => orde.indexOf(e) === i);\n      return orde;\n    case \"ataque-\":\n      fuerza = fuerza.sort((a, b) => a - b);\n      fuerza.forEach((f) => {\n        array.forEach((p) => {\n          if (p.fuerza === f) orde.push(p);\n        });\n      });\n      orde = orde.filter((e, i) => orde.indexOf(e) === i);\n      return orde;\n    case \"createdBDD\":\n      return bdd;\n    case \"api\":\n      return api\n    default:\n      return array;\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}